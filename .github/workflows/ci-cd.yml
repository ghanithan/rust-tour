name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Stage 1: Code Quality and Testing
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install web dependencies
      run: |
        cd web
        npm ci

    # Rust linting removed - not useful for educational exercises with intentional bugs

    - name: Lint web code
      run: |
        cd web
        npm run lint

    # Rust tests removed - exercises contain intentional bugs for learning

    - name: Run web tests
      run: |
        cd web
        npm test

    - name: Build web frontend
      run: |
        cd web
        npm run build

    - name: Test exercise framework
      run: |
        # Only test structure, not code (exercises contain intentional bugs)
        ./scripts/validate-exercises.sh

  # Stage 2: Security Audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2

    - name: Run Cargo audit
      run: |
        cargo install cargo-audit
        cargo audit

    - name: Run npm audit
      run: |
        cd web
        npm audit --audit-level=moderate


  # CI/CD is now focused on CI and testing only
  # Release builds (binaries, Docker, cargo publish) are handled by release.yml

  